@import 'tailwindcss';

/* ==== Theme (Tailwind v4 tokens) ==== */
@theme {
  /* fonts */
  --font-sans: 'Space Grotesk', ui-sans-serif, system-ui, -apple-system,
    'Segoe UI', Roboto, 'Helvetica Neue', Arial, 'Noto Sans',
    'Apple Color Emoji', 'Segoe UI Emoji';

  /* light by default (dark handled via media query) */
  --color-bg: #ffffff;
  --color-fg: #0b0d10;
  --color-muted: #5f6c7b;
  --color-accent: #06d7ff; /* futuristic cyan */
  --ring: var(--color-accent);

  /* sizing tokens */
  --radius-sm: 0.375rem;
  --radius-md: 0.5rem;
  --radius-lg: 0.75rem;
}

@layer utilities {
  .bleed-x {
    margin-left: calc(-1 * var(--page-pad));
    margin-right: calc(-1 * var(--page-pad));
  }

  .bleed-y {
    margin-top: calc(-1 * var(--page-pad));
    margin-bottom: calc(-1 * var(--page-pad));
  }
}

@layer utilities {
  /* Desktop-only link animation */
  .nav-link {
    @apply relative inline-flex items-center gap-1 transition-colors duration-200;
  }
  /* animated underline (hidden by default) */
  .nav-link::after {
    content: '';
    position: absolute;
    left: 0;
    right: 0;
    bottom: -2px;
    height: 2px;
    transform: scaleX(0);
    transform-origin: left;
    background: var(--color-accent);
    transition: transform 0.25s ease-out;
  }
  /* hover effects only from sm and up (desktop) */
  @media (min-width: 640px) {
    .nav-link:hover {
      color: var(--color-accent);
    }
    .nav-link:hover::after {
      transform: scaleX(1);
    }
  }
}

/* Dark mode via prefers-color-scheme (v4 is configless; this matches darkMode:'media') */
@media (prefers-color-scheme: dark) {
  :root {
    --color-bg: #0b0d10;
    --color-fg: #e6f1ff;
    --color-muted: #8b9db1;
    --color-accent: #00e5ff;
  }
}

/* ==== Base Reset + Typography ==== */
@layer base {
  *,
  *::before,
  *::after {
    box-sizing: border-box;
  }
  html,
  body,
  #root {
    height: 100%;
  }
  body {
    @apply bg-bg text-fg antialiased;
    font-family: var(--font-sans);
    text-rendering: optimizeLegibility;
  }
  :focus-visible {
    outline: 2px solid var(--color-accent);
    outline-offset: 2px;
  }
  a {
    @apply underline-offset-4;
  }
}

/* ==== Utilities (logical spacing + nice shadow) ==== */
@layer utilities {
  .pi-fluid {
    padding-inline: clamp(1rem, 4vw, 2rem);
  }
  .mi-auto {
    margin-inline: auto;
  }
  .elevate {
    box-shadow: 0 10px 30px -12px rgba(0, 0, 0, 0.15);
  }
}

/* ==== Hero background helpers ==== */
.hero-wrap {
  position: relative;
  z-index: 0;
  isolation: isolate;
  --haze1: color-mix(in srgb, var(--color-accent) 10%, transparent);
  --haze2: color-mix(in srgb, var(--color-accent) 8%, transparent);
  background: radial-gradient(
      120% 120% at 20% 30%,
      var(--haze1) 0%,
      transparent 70%
    ),
    radial-gradient(120% 120% at 80% 40%, var(--haze2) 0%, transparent 70%);
  /* fade to transparent toward the bottom 20% */
  -webkit-mask-image: linear-gradient(
    to bottom,
    #000 0%,
    #000 80%,
    transparent 100%
  );
  mask-image: linear-gradient(to bottom, #000 0%, #000 80%, transparent 100%);
}

.hero-wrap::before {
  /* diamond (unchanged except z) */
  /* content: ''; */
  position: absolute;
  left: 50%;
  top: 50%;
  width: min(78vmin, 1100px);
  height: min(78vmin, 1100px);
  transform: translate(-50%, -50%) rotate(45deg);
  border: 1px solid color-mix(in srgb, var(--color-fg) 18%, transparent);
  border-radius: 10px;
  z-index: -1;
  pointer-events: none;
}

@layer components {
  /* Base notched shape */
  .btn-notch {
    @apply relative inline-flex items-center gap-2 px-6 py-3 font-semibold transition duration-200;
    clip-path: polygon(
      10px 0,
      /* ↖ top-left notch */ 100% 0,
      /* top-right */ 100% calc(100% - 10px),
      /* ↘ bottom-right notch start */ calc(100% - 10px) 100%,
      /* ↘ bottom-right notch end   */ 0 100%,
      /* bottom-left */ 0 10px /* back up left edge */
    );
  }

  /* Filled (left button) */
  .btn-notch--primary {
    background: color-mix(in srgb, var(--color-fg) 92%, transparent);
    color: var(--color-bg);
    box-shadow: 0 8px 24px rgba(0, 0, 0, 0.18);
  }
  .btn-notch--primary:hover {
    transform: translateY(-1px);
  }

  /* Thin border line that follows the notch (for both variants) */
  .btn-notch::before {
    content: '';
    position: absolute;
    inset: 0;
    clip-path: inherit;
    border: 2px solid color-mix(in srgb, var(--color-fg) 10%, transparent);
    pointer-events: none;
    border-radius: 0; /* keep crisp */
  }

  /* Outlined (right button) */
  .btn-notch--ghost {
    background: transparent;
    color: var(--color-fg);
  }
  .btn-notch--ghost:hover {
    background: color-mix(in srgb, var(--color-fg) 5%, transparent);
  }

  .btn-notch--primary {
    background: color-mix(in srgb, var(--color-accent) 92%, transparent);
    color: var(--color-bg);
  }
}
@media (min-width: 1024px) {
  .btn-notch {
    clip-path: polygon(
      12px 0,
      100% 0,
      100% calc(100% - 12px),
      calc(100% - 12px) 100%,
      0 100%,
      0 12px
    );
  }
}
.hero-wrap::after {
  /* grid pattern */
  content: '';
  position: absolute;
  inset: 0;
  z-index: -2;
  pointer-events: none;
  background: repeating-linear-gradient(
      45deg,
      color-mix(in srgb, var(--color-fg) 6%, transparent) 0 1px,
      transparent 1px 28px
    ),
    repeating-linear-gradient(
      -45deg,
      color-mix(in srgb, var(--color-fg) 5%, transparent) 0 1px,
      transparent 1px 28px
    );
  /* fade bottom to transparent too */
  -webkit-mask-image: linear-gradient(
    to bottom,
    #000 0%,
    #000 75%,
    transparent 100%
  );
  mask-image: linear-gradient(to bottom, #000 0%, #000 75%, transparent 100%);
}

@layer utilities {
  .fade-item {
    @apply opacity-0 translate-y-2 transition-all duration-500 ease-out will-change-transform;
  }
  .fade-item.is-visible {
    @apply opacity-100 translate-y-0;
  }
}

@layer utilities {
  .collapsible {
    @apply overflow-hidden transition-[max-height,opacity,transform] duration-300 ease-out;
    max-height: 0;
    opacity: 0;
    transform: translateY(-0.25rem);
  }
  .collapsible.open {
    max-height: 40rem;
    opacity: 1;
    transform: translateY(0);
  }
}
